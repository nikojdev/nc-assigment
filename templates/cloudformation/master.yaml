Description: >
  This template is PoC for technical assignment. Its intended to demonstrate simple Infrastructure as code (IaC) concepts by provisioning the enviroment
  and deploying the application in highly available cloud environment. It is based on AWS template for Deploying Microservices with Amazon ECS, AWS CloudFormation, and an Application Load Balancer.

  Prerequisite
  Before deploying the new stack, user is required to have Docker image of the application (notejam app) both built & pushed into their ECR Repository.

  How to use this template
  When deploying the new stack, user is prompted to provide Database username, Database password and AWS ECR URL of the Docker image.
  Database will be provisioned with provided username & password to be used by application. ECR URL is used by containers to point to intended docker image.

Parameters:
  DBUser:
    NoEcho: true
    Description:  Database Username
    Type: String
    MinLength: 4
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
  DBPwd:
    NoEcho: true
    Description: Database Password
    Type: String
    MinLength: 12
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]*$
  DockerImageUrl:
    Description:  AWS ECR Docker Image URL (Notejam app)
    Type: String
    MinLength: 4
    MaxLength: 150
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/assigment-public/notejam/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/assigment-public/notejam/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/assigment-public/notejam/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/assigment-public/notejam/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.medium
        ClusterSize: 4
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  RDS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/assigment-public/notejam/data/rds.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: db.t2.small
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        DBSecurityGroup: !GetAtt SecurityGroups.Outputs.DBSecurityGroup
        DBUsername: !Ref DBUser
        DBPassword: !Ref DBPwd


  WebsiteService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/assigment-public/notejam/services/website-service/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 4
        ProductServiceUrl:
          !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole
        DbEndpoint: !GetAtt RDS.Outputs.DbEndpoint
        DBUsername: !Ref DBUser
        DBPassword: !Ref DBPwd
        DockerImage: !Ref DockerImageUrl

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/assigment-public/notejam/infrastructure/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:
  WebsiteServiceUrl:
    Description: The URL endpoint for the website service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]
